name: .NET Build, Test and Deploy

on:
  push:
    branches: [ master ]

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v3

    - name: 🧰 Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: 📦 Restore
      run: dotnet restore

    - name: 🛠️ Build
      run: dotnet build --no-restore --configuration Release

    - name: ✅ Test
      run: dotnet test Server.Tests/Server.Tests.csproj --no-build --configuration Release --logger trx

    - name: 📤 Publish Server and WebApp
      run: |
        dotnet publish Server/Server.csproj -c Release -o publish/Server
        dotnet publish WebApp/WebApp.csproj -c Release -o publish/WebApp

    - name: 🧼 Stop running .NET apps and clean folder on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          pkill -f dotnet || true
          rm -rf /home/ec2-user/myapp/*



    - name: 🚀 Deploy to EC2 via SCP
      uses: appleboy/scp-action@v0.1.4
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        source: ./publish/
        target: /home/ec2-user/myapp/

    - name: 🧨 Start .NET apps on EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          nohup dotnet /home/ec2-user/myapp/publish/Server/Server.dll --urls http://0.0.0.0:5000 > /home/ec2-user/myapp/app.log 2>&1 &
          nohup dotnet /home/ec2-user/myapp/publish/WebApp/WebApp.dll --urls http://0.0.0.0:5001 > /home/ec2-user/myapp/app.log 2>&1 &
