@model List<ScheduledEventViewModel>
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer

@{
    ViewData["Title"] = Localizer["Title"];
}

<h2>@Localizer["ScheduledEvents"]</h2>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>@Localizer["Device"]</th>
            <th>@Localizer["Type"]</th>
            <th>@Localizer["Description"]</th>
            <th>@Localizer["ScheduledTimeUtc"]</th>
            <th>@Localizer["Recurring"]</th>
            <th>@Localizer["Interval"]</th>
            <th>@Localizer["AudioFile"]</th>
            <th>@Localizer["Status"]</th>
            <th>@Localizer["Actions"]</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var e in Model)
        {
            <tr>
                <td>@e.DeviceName</td>
                <td>@e.EventType</td>
                <td>@e.Description</td>
                <td>@e.ScheduledTime.ToString("yyyy-MM-dd HH:mm")</td>
                <td>
                    @(e.IsRecurring ? Localizer["Yes"] : Localizer["No"])
                </td>
                <td>
                    @if (e.RecurrenceInterval.HasValue)
                    {
                        @e.RecurrenceInterval.Value.ToString(@"hh\:mm\:ss")
                    }
                    else
                    {
                        <span class="text-muted">@Localizer["N/A"]</span>
                    }
                </td>
                <td>
                    @if (!string.IsNullOrWhiteSpace(e.AudioFileName))
                    {
                        <a href="@e.AudioFilePath" target="_blank">@e.AudioFileName</a>
                    }
                    else
                    {
                        <span class="text-muted">@Localizer["N/A"]</span>
                    }
                </td>
                <td>
                    @if (e.IsRecurring)
                    {
                        <label class="switch">
                            <input type="checkbox"
                                   class="toggle-switch"
                                   data-event-id="@e.Id"
                            @(e.IsEnabled ? "checked" : "") />
                            <span class="slider round"></span>
                        </label>
                    }
                    else
                    {
                        <label class="switch" title="@Localizer["RecurringToggleTooltip"]">
                            <input type="checkbox"
                            @(e.IsEnabled ? "checked" : "") disabled />
                            <span class="slider round"></span>
                        </label>
                    }
                </td>
                <td>
                    <form asp-controller="User"
                          asp-action="DeleteEvent"
                          asp-route-id="@e.Id"
                          method="post"
                          style="display:inline;">
                        <button type="submit" class="btn btn-sm btn-danger"
                                onclick="return confirm('@Localizer["ConfirmDelete"]');">
                            @Localizer["Delete"]
                        </button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 46px;
        height: 24px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        transition: 0.4s;
        border-radius: 24px;
    }

        .slider::before {
            position: absolute;
            content: "";
            height: 18px;
            width: 18px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
        }

    input:checked + .slider {
        background-color: #4CAF50;
    }

        input:checked + .slider::before {
            transform: translateX(22px);
        }

    .slider.round {
        border-radius: 24px;
    }

    input[disabled] + .slider {
        opacity: 0.5;
        cursor: not-allowed;
    }
</style>



@section Scripts {
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        $(document).ready(function () {
            $('.toggle-switch').change(function () {
                const checkbox = $(this);
                const eventId = checkbox.data('event-id');
                $.ajax({
                    url: `/User/ToggleEventStatus?id=${eventId}`,
                    method: 'POST',
                    success: function (response) {
                        // Optional: show a toast or update status
                    },
                    error: function () {
                        checkbox.prop('checked', !checkbox.prop('checked'));
                    }
                });
            });
        });
    </script>
}
