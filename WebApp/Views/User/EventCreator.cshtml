@model WebApp.Models.EventCreatorModel

@{
    ViewData["Title"] = "Create Event";
}

<div class="container py-4">
    <h3>Create Scheduled Event</h3>

    <form asp-action="CreateSingle" method="post">
        <div class="mb-3">
            <label asp-for="DeviceId" class="form-label">Device</label>
            <select asp-for="DeviceId" class="form-select"
                    asp-items="new SelectList((List<WebApp.Models.DeviceOptionModel>)ViewBag.DeviceOptions, nameof(DeviceOptionModel.Id), nameof(DeviceOptionModel.Name))">
                <option value="">-- Select Device --</option>
            </select>
        </div>

        <div class="mb-3">
            <label asp-for="EventType" class="form-label">Event Type</label>
            <select asp-for="EventType" class="form-select" id="eventTypeSelect">
                <option value="">-- Select Event Type --</option>
                <option value="PushNotification">Push Notification</option>
                <option value="AudioMessage">Audio Message</option>
            </select>
        </div>

        <!-- Push Notification field -->
        <div class="mb-3" id="pushMessageDiv" style="display: none;">
            <label asp-for="Description" class="form-label">Push Message</label>
            <input asp-for="Description" class="form-control" />
        </div>

        <!-- Audio Message field -->
        <div class="mb-3" id="audioUrlDiv" style="display: none;">
            <label asp-for="Description" class="form-label">Audio File URL</label>
            <input asp-for="Description" class="form-control" />
        </div>


        @* <div class="mb-3">
            <label asp-for="Description" class="form-label">Description</label>
            <input asp-for="Description" class="form-control" />
        </div> *@

        @{
            var minDateTime = DateTime.UtcNow.AddMinutes(5);
            var minValue = minDateTime.ToString("yyyy-MM-ddTHH:mm");
        }
        <div class="mb-3">
            <label asp-for="ScheduledTime" class="form-label">Scheduled Time (UTC)</label>
            <input asp-for="ScheduledTime" type="datetime-local" class="form-control" id="scheduledTimeInput" min="@minValue" />
        </div>


        <div class="form-check mb-3">
            <input asp-for="IsRecurring" class="form-check-input" id="IsRecurringToggle" />
            <label asp-for="IsRecurring" class="form-check-label">Recurring</label>
        </div>

        <div class="mb-3" id="recurrenceIntervalDiv" style="display:none;">
            <label asp-for="RecurrenceInterval" class="form-label">Recurrence Interval (Hours)</label>
            <input asp-for="RecurrenceInterval" class="form-control" />
        </div>

        <button type="submit" class="btn btn-primary">Create</button>
    </form>
</div>

@section Scripts {
    <script>
        const toggle = document.getElementById('IsRecurringToggle');
        const intervalDiv = document.getElementById('recurrenceIntervalDiv');

        function updateVisibility() {
            intervalDiv.style.display = toggle.checked ? 'block' : 'none';
        }

        toggle.addEventListener('change', updateVisibility);
        window.addEventListener('DOMContentLoaded', updateVisibility);

        const eventTypeSelect = document.getElementById('eventTypeSelect');
        const pushDiv = document.getElementById('pushMessageDiv');
        const audioDiv = document.getElementById('audioUrlDiv');

        function toggleFields() {
            const selected = eventTypeSelect.value;
            pushDiv.style.display = selected === 'PushNotification' ? 'block' : 'none';
            audioDiv.style.display = selected === 'AudioMessage' ? 'block' : 'none';
        }

        eventTypeSelect.addEventListener('change', toggleFields);
        window.addEventListener('DOMContentLoaded', toggleFields);

        document.addEventListener("DOMContentLoaded", function () {
            const input = document.getElementById("scheduledTimeInput");

            // Отримати дату +5 хвилин
            const now = new Date();
            now.setMinutes(now.getMinutes() + 5);
            now.setSeconds(0, 0);

            const minFormatted = now.toISOString().slice(0, 16);

            input.min = minFormatted;
            input.value = minFormatted;

            // ❗ Перевірка при зміні: не дозволяти менше за min
            input.addEventListener('change', function () {
                if (input.value < input.min) {
                    input.value = input.min;
                }
            });
        });
    </script>
}
